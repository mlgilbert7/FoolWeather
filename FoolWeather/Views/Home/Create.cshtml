@model FoolWeather.Models.Home

@{
    ViewBag.Title = "Start";
}

<br/>
<br/>
<h4>Enter an Address or press "Get My Location".  Then press "Current Weather".</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        <label id="MISSING" />
        <hr /><br />
        <div class="form-group">
            <table>
                <tr>
                    <td>
                        <label class="control-label">Address (City, State or Zip Code)</label>
                    </td>
                    <td width="440px" align="center">
                        @Html.TextBoxFor(model => model.Address, new { style = "width: 400px;" })
                    </td>
                    <td align="left">
                        <input type="submit" value="Current Weather" class="btn btn-default" />
                    </td>
                </tr>
                <tr>
                    <td></td>
                    <td>
                        @Html.ValidationMessageFor(model => model.Address)
                    </td>
                    <td></td>
                </tr>
            </table>
            <br />
            <br />
            <table width="90%">
                <tr>
                    <td width="35%">
                        <table>
                            <tr>
                                <td align="center" width="40%">
                                    @Html.LabelFor(model => model.Latitude, new { @class = "control-label" })
                                    @Html.ValidationMessageFor(model => model.Latitude)
                                </td>
                                <td width="50%">
                                    @Html.TextBoxFor(model => model.Latitude)
                                </td>
                            </tr>
                            <tr>
                                <td align="center" width="40%">
                                    @Html.LabelFor(model => model.Longitude, new { @class = "control-label" })
                                    @Html.ValidationMessageFor(model => model.Longitude)
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => model.Longitude)
                                </td>
                            </tr>
                        </table>
                    </td>
                    <td valign="middle">
                        <input value="Get My Location" class="btn btn-default" onclick="getLocation()" />
                    </td>
                    <td valign="middle">
                        <p id="demo"></p>
                    </td>
                </tr>
            </table>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    var x = document.getElementById("demo");
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition, showError);
        }
        else { x.innerHTML = "Geolocation is not supported by this browser."; }
    }
    function showPosition(position) {
        var lbl = document.getElementById("Latitude");
        lbl.value = position.coords.latitude;

        var lbl = document.getElementById("Longitude");
        lbl.value = position.coords.longitude;
    }
    function showError(error) {
        switch (error.code) {
            case error.PERMISSION_DENIED:
                x.innerHTML = "User denied the request for Geolocation."
                break;
            case error.POSITION_UNAVAILABLE:
                x.innerHTML = "Location information is unavailable."
                break;
            case error.TIMEOUT:
                x.innerHTML = "The request to get user location timed out."
                break;
            case error.UNKNOWN_ERROR:
                x.innerHTML = "An unknown error occurred."
                break;
        }
    }
</script>
